gitcheckout () {
  git checkout $1
  git pull --all
  git checkout -b "$2/$3"
  git push --set-upstream origin "$1/$2"
}

gitOpenPR () {
  currentBranch=$( git branch --show-current )
  taskType=$( echo $currentBranch | grep '/.*' | cut -f 1 -d '/' )
  taskID=$( echo $currentBranch | grep '/.*' | cut -f 2 -d '/' | cut -f 1 -d '-' )

  lastTag=$( gh release list -L 1 )
  lastTrainReleaseTag=$( echo $lastTag | cut -f 1 -d ".")
  nextTrainReleaseTag=$( expr 1 + $lastTrainReleaseTag )
  lastIssueReleaseTag=$( echo $lastTag | cut -f 2 -d "." | cut -f 1 -d$'\t')
  nextIssueReleaseTag=$( expr 1 + $lastIssueReleaseTag )

  if [[ $taskType == "hotfix" ]];
  then
    gh pr create --base stage --title "[#$taskID]($taskType)" --web
    gh release create --title "$lastTrainReleaseTag.$nextIssueReleaseTag" --notes " " --target "$currentBranch" "$lastTrainReleaseTag.$nextIssueReleaseTag"

  elif [[ $currentBranch == "dev" ]];
  then
    gh pr create --base prod --title "Release $nextTrainReleaseTag.0" --web
    gh release create --title "$nextTrainReleaseTag.0" --notes " " --target "$currentBranch" "$nextTrainReleaseTag.0"
  else
    gh pr create --base dev --title "[#$taskID]($taskType)" --web
  fi
}

alias gopr=gitOpenPR

# creates a feature branch on local and remote
alias "gitFeat"='gitcheckout dev feat'
alias gffs='gitcheckout dev feat'

# creates a hotfix branch on local and remote
alias "gitHotfix"='gitcheckout stage hotfix'
alias "ghf"='gitcheckout stage hotfix'

